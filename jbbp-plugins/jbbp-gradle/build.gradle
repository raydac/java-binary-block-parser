def getProp(name, defaultValue) {
    if (project.hasProperty(name)) {
        return project.getProperty(name)
    } else {
        logger.warn('Can not find property "' + name + '" is not found')
        return defaultValue
    }
}

def jbbpVersion = getProp('jbbp_plugin_version', '2.0.4')
def metaLibVersion = getProp('meta_lib_version', '1.1.2')

group = 'com.igormaznitsa'
version = jbbpVersion

apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: "com.gradle.plugin-publish"

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation gradleApi()
    implementation localGroovy()

    implementation "commons-io:commons-io:2.8.0"
    implementation "com.igormaznitsa:jbbp:" + jbbpVersion

    implementation "com.igormaznitsa:meta-annotations:" + metaLibVersion
    implementation "com.igormaznitsa:meta-utils:" + metaLibVersion

    testImplementation 'junit:junit:4.13.1'
}

repositories {
    mavenCentral()
    mavenLocal()
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.21.0"
    }
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java'
            srcDirs '../jbbp-plugin-common/src/main/java'
        }
    }
}

pluginBundle {
    website = 'https://github.com/raydac/java-binary-block-parser'
    vcsUrl = 'https://github.com/raydac/java-binary-block-parser'
    description = 'JBBP script translator!'
    tags = ['jbbp', 'converter']

    plugins {
        JBBPPlugin {
            id = 'com.igormaznitsa.gradle.jbbp'
            displayName = 'JBBP Sources Generator plugin'
        }
    }
}